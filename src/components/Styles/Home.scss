@import '../../App.scss';
@import'../Styles/Animation.scss';

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~ > 996px ~~~~~~~~~~~~~~~~~~~~~~~~~~~ //

.box-home {

    .letter-box {
        $w1: calc(4rem * 0.8);
        $w2: calc(3rem * 0.8);

        display: inline-block;
        width: calc(4rem * 0.8);
        width: clamp($w2, 4.3vw, $w1);
        margin-left: 1rem;
        margin-right: 2px;

        &:hover {
            animation: rubberBand 1s;
        }

        img {
            position: relative;
            object-fit: contain;
            height: 100%;
            width: 100%;
            opacity: 0;
            animation: rotateIn 1s linear both;
            animation-fill-mode: both;
            bottom: 10px;
        }
    }

    h2 {
        color: $secondary-color;
        font-size: clamp(1rem, 4vw, 1.5rem);
        opacity: 0;
        animation: fadeInUp 1.5s 2s forwards;
    }

    .box-btn {
        opacity: 0;
        animation: fadeInUp 1.5s 2.5s forwards;     

        .contact-btn {
            @include button;
            display: inline-block;
            text-decoration: none;
            }
        
    }

    .box-effect {
        grid-area: second;
        padding: 150px 0px 1rem 0px;

        // img {
        //     width: 35vw;
        //     height: 35vw;
        //     animation: fadeInLeft 1.5s 2s forwards;
        //     opacity: 0;
        //     overflow: hidden;
        // }
    }
        
    .grid-box{
        $length: 400px;
        $squareRoot: 8;
        
        width: $length;
        height: $length;
        display: grid;
        border-radius: 30px;
        gap: 0px;

        $tile: calc($length / $squareRoot);

        img {
            object-fit: none;
            width: $tile;
            height: $tile;
        }

        .tile {
            width: $tile;
            height: $tile;
            // opacity: 0;
            animation: flipInX 0.5s both;

            
            &.tile-2, &.tile-9 {
                animation-delay: 0.25s;
            }
            &.tile-3, &.tile-10, &.tile-17 {
                animation-delay: 0.5s;
            }
            &.tile-4, &.tile-11, &.tile-18, &.tile-25 {
                animation-delay: 0.75s;
            }
            &.tile-5, &.tile-12, &.tile-19, &.tile-26, &.tile-33 {
                animation-delay: 1s;
            }
            &.tile-6, &.tile-13, &.tile-20, &.tile-27, &.tile-34, &.tile-41 {
                animation-delay: 1.25s;
            }
            &.tile-7, &.tile-14, &.tile-21, &.tile-28, &.tile-35, &.tile-42, &.tile-49 {
                animation-delay: 1.5s;
            }
            &.tile-8, &.tile-15, &.tile-22, &.tile-29, &.tile-36, &.tile-43, &.tile-50, &.tile-57 {
                animation-delay: 1.5s;
            }
        }


        @keyframes flipX {
            0% { transform: rotateX(90deg); opacity: 1;}
            33% { transform: rotateX(-50deg); opacity: 1;}
            50% { transform: rotateX(30deg); opacity: 1;}
            68% { transform: rotateX(-30deg); opacity: 1;}
            100% { transform: rotateX(0deg); opacity: 1;}
        }
        
        @keyframes flipY {
            0% { transform: rotateY(90deg); opacity: 1;}
            33% { transform: rotateY(-50deg); opacity: 1;}
            50% { transform: rotateY(30deg); opacity: 1;}
            68% { transform: rotateY(-30deg); opacity: 1;}
            100% { transform: rotateY(0deg); opacity: 1;}
        }

        @for $i from 1 through calc($squareRoot * $squareRoot) {
            $step1: 0%;
            $step2: calc(100% / 7);
            $step3: calc(100% / 7 * 2);
            $step4: calc(100% / 7 * 3);
            $step5: calc(100% / 7 * 4);
            $step6: calc(100% / 7 * 5);
            $step7: calc(100% / 7 * 6);
            $step8: 100%;

            @for $i from 1 through 8 {
                .img-#{$i} {
                    object-position: calc(100% / 7 * ($i - 1)) $step1;
                }
            }
            @for $i from 1 through 8 {
                .img-#{$i + 8} {
                    object-position: calc(100% / 7 * ($i - 1)) $step2;
                }
            }
            @for $i from 1 through 8 {
                .img-#{$i + 16} {
                    object-position: calc(100% / 7 * ($i - 1)) $step3;
                }
            }
            @for $i from 1 through 8 {
                .img-#{$i + 24} {
                    object-position: calc(100% / 7 * ($i - 1)) $step4;
                }
            }
            @for $i from 1 through 8 {
                .img-#{$i + 32} {
                    object-position: calc(100% / 7 * ($i - 1)) $step5;
                }
            }
            @for $i from 1 through 8 {
                .img-#{$i + 40} {
                    object-position: calc(100% / 7 * ($i - 1)) $step6;
                }
            }
            @for $i from 1 through 8 {
                .img-#{$i + 48} {
                    object-position: calc(100% / 7 * ($i - 1)) $step7;
                }
            }
            @for $i from 1 through 8 {
                .img-#{$i + 56} {
                    object-position: calc(100% / 7 * ($i - 1)) $step8;
                }
            }

            
            // .tile-#{$i}.x {
            //     animation: flipX calc(random(7) * 0.7s + 1s) calc(random(5) * 0.3s + 1s) forwards;
            // }
            // .tile-#{$i}.y {
            //     animation: flipY calc(random(7) * 0.7s + 1s) calc(random(5) * 0.3s + 1s) forwards;
            // }

        }
    }
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~ < 996px ~~~~~~~~~~~~~~~~~~~~~~~~~~~ //

@media screen and (max-width: 992px) {
    .box-home {   

        .letter-box {
           width: calc(3.3rem * 0.8);

            img {
                bottom: 8px;
            }
        }

        h2 {
            width: 100%;
        }

        .box-effect {

            img {
                width: 100%;
                height: auto;
                padding-top: 40px;
            }

            .grid-box{
                width: 100%;
                height: auto;
                display: grid;
                grid-template-columns: repeat(6, 1fr);
                grid-template-rows: repeat(6, 1fr);
                border-radius: 30px;

                $tile: 50px;

                .tile {
                    height: $tile;
                    width: $tile;
                    img {
                        object-fit: none;
                        width: $tile;
                        height: $tile;
                    }
                }
            }    
        }    
    } 
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~ < 768px ~~~~~~~~~~~~~~~~~~~~~~~~~~~ //

@media screen and (max-width: 768px) {
    .box-home {

        .box-effect {
            display: flex;
            justify-content: center;
            img {
                width: 60%;
                height: auto; 
            }
        }
    }
}

// ~~~~~~~~~~~~~~~~~~~~~~~~~~~ < 556px ~~~~~~~~~~~~~~~~~~~~~~~~~~~ //

@media screen and (max-width: 576px) {
    .box-home {

        .letter-box {
            $font-h1: clamp(1rem, 12vw,3rem);
            width: clamp(0.8rem, 12vw, 2.4rem);

            img {
                bottom: clamp(4px, 1rem, 9px);
            }
        }
       
        .box-btn {
            width: 100%;

            .contact-btn {
                background-color: $primary-color;
                color: $dark;
            }
        }        
    }    
}